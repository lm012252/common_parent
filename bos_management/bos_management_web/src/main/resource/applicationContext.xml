<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:soap="http://cxf.apache.org/bindings/soap"
       xsi:schemaLocation="
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                        http://cxf.apache.org/bindings/soap
						http://cxf.apache.org/schemas/configuration/soap.xsd
						http://cxf.apache.org/jaxws
						http://cxf.apache.org/schemas/jaxws.xsd">

    <!-- 连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
        <property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.62.128:1521:ORCL" />
        <property name="user" value="bosuser" />
        <property name="password" value="bosuser" />
    </bean>

    <!-- spring整合JPA -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 指定扫描的包，存放实体类 -->
        <property name="packagesToScan" value="com.lm.bos.domain" />
        <!-- 指定持久层提供者为Hibernate -->
        <property name="persistenceProvider">
            <bean class="org.hibernate.ejb.HibernatePersistence" />
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- 自动建表 -->
                <property name="generateDdl" value="true" />
                <!--指定数据库-->
                <property name="database" value="ORACLE" />
                <!--数据库方言-->
                <property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
                <!--显示sql语句-->
                <property name="showSql" value="true" />
            </bean>
        </property>
        <!--jpa方言，指定hibernate方言  jpql=hql-->
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
    </bean>

    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- 组件扫描 @Server @Controller @Repository -->
    <context:component-scan base-package="com.lm.bos.service,com.lm.bos.web"/>

    <!-- 事务注解支持 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Spring 初始化容器时将会扫描 base-package 指定的包目录及其子目录，
    为继承 Repository 或其子接口的接口创建代理对象，并将代理对象注册为 Spring Bean，
    业务层便可以通过注解注入的方式来直接使用该对象。-->
    <jpa:repositories base-package="com.lm.bos.dao" />

    <!--配置WebService客户端，通过WebService访问CRM服务-->
    <jaxws:client id="crmClient" address="http://localhost:8889/crm/cxf/customer"
                  serviceClass="com.lm.bos.crm.service.CustomerServiceImpl"></jaxws:client>

    <!--注册order服务-->
    <bean id="orderService" class="com.lm.bos.service.take_delivery.impl.OrderServiceImpl"></bean>
    <!--order配置服务-->
    <jaxws:server address="/order">
        <jaxws:serviceBean>
            <ref bean="orderService"></ref>
        </jaxws:serviceBean>
    </jaxws:server>

    <!--注入bosRealm-->
    <bean id="bosRealm" class="com.lm.bos.web.action.realm.BosRealm" />
    <!--注册安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="bosRealm"></property>
    </bean>
    <!--注册shiroFilter-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--配置安全管理器-->
        <property name="securityManager" ref="securityManager"></property>
        <!--配置权限相关的页面
            1.登录页面
            2.登录成功页面
            3.没有权限的页面
        -->
        <property name="loginUrl" value="/login.html"></property>
        <property name="successUrl" value="/index.html"></property>
        <property name="unauthorizedUrl" value="/unauthorized.html"></property>
        <!-- 权限规则相关配置
                authc:只要认证才可以访问功能
                anon：匿名过滤器 （不需要权限访问功能）

                注意：有顺序问题
                -->
        <property name="filterChainDefinitions">
            <value>
                /css/** = anon
                /images/** = anon
                /js/** = anon
                /validatecode.jsp* = anon
                /userAction_login.action = anon
                /**=authc
            </value>
        </property>
    </bean>
</beans>
